name: Export branch history (artifact)

on:
  push:
    branches:
      - staging
  workflow_dispatch:
    inputs:
      branch:
        description: Branch to export (e.g. staging, main, feature/x)
        required: true
        default: staging   # align default with your push trigger

jobs:
  export:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine target branch
        id: target
        run: |
          if [ -n "${{ github.event.inputs.branch }}" ]; then
            echo "BRANCH=${{ github.event.inputs.branch }}" >> $GITHUB_ENV
          else
            echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi
          echo "Using branch: ${BRANCH}"

      - name: Switch to target branch
        run: |
          git fetch --all --prune
          git checkout "${BRANCH}"

      - name: Generate commit logs
        run: |
          mkdir -p export
          git log --pretty=full > export/history_full.txt
          git log --oneline --decorate --graph > export/history_oneline.txt
          git log --pretty=format:'%H|%an|%ae|%ad|%s' --date=iso > export/history_pipe.txt

      - name: Generate patch series (robust)
        run: |
          set -e
          mkdir -p export/patches

          BASE=origin/main
          # ensure BASE exists locally
          git fetch origin main:refs/remotes/origin/main || true

          echo "Attempt 1: patches unique to ${BRANCH} vs ${BASE}"
          git format-patch "${BASE}..${BRANCH}" -o export/patches || true

          PATCH_COUNT=$(find export/patches -type f -name '*.patch' | wc -l | tr -d ' ')
          if [ "$PATCH_COUNT" -eq 0 ]; then
            if [ "${BRANCH}" != "main" ]; then
              echo "No unique commits vs ${BASE}. Attempt 2: full history of ${BRANCH} (--root)"
              git format-patch --root "${BRANCH}" -o export/patches || true
            else
              echo "No unique commits (main vs origin/main). Attempt 2: last 200 commits on main."
              # Export last N commits on main into patches
              LASTN=$(git rev-list --max-count=200 main | tail -n1)
              if [ -n "$LASTN" ]; then
                git format-patch "${LASTN}^..main" -o export/patches || true
              fi
            fi
          fi

          PATCH_COUNT=$(find export/patches -type f -name '*.patch' | wc -l | tr -d ' ')
          if [ "$PATCH_COUNT" -eq 0 ]; then
            echo "::error::No patches produced for branch ${BRANCH}. Verify history and BASE."
            exit 1
          fi

          echo "Produced $PATCH_COUNT patch(es):"
          ls -la export/patches | sed 's/^/  /'

          tar -czf export/patches.tgz -C export patches

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.repository_owner }}-${{ github.event.repository.name }}-${{ env.BRANCH }}-history-${{ github.run_number }}
          path: |
            export/history_full.txt
            export/history_oneline.txt
            export/history_pipe.txt
            export/patches.tgz
          retention-days: 30
