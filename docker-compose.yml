services:
    portainer:
      container_name: portainer
      image: portainer/portainer
      restart: always
      ports: 
        - "9090:9000/tcp"
      environment:
        - TZ="${TIME_ZONE}"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /opt/portainer:/data

    nginx:
        container_name: "nginx"
        build:
            context: ./dockerfiles
            dockerfile: nginx.dockerfile
            args:
                - USER_ID=${USER_ID:-1000}
                - GROUP_ID=${GROUP_ID:-1000}
        ports:
            - "${FORWARD_NGINX_PORT:-80}:80"
            - "${FORWARD_NGINX_HTTPS_PORT:-443}:443"
        volumes:
            - ./src:/var/www/html:delegated
            - ./ssl:/etc/ssl
        entrypoint: ["/bin/sh", "-c", "chown -R laravel:laravel /var/www/html && exec nginx -g 'daemon off;'"]
        depends_on:
            - php
            - postgresql17
        networks:
            - laravel
        restart: unless-stopped

    postgresql17:
        image: postgres:17.2
        container_name: postgresql17
        environment:
          POSTGRES_DB: ${DB_DATABASE}
          POSTGRES_USER: ${DB_USERNAME}
          POSTGRES_PASSWORD: ${DB_PASSWORD}
          PGDATA: /data/postgres
          TZ: ${TIME_ZONE}
        healthcheck:
          test: [ "CMD-SHELL", "pg_isready -d ${DB_DATABASE} -U ${DB_USERNAME}" ]
          interval: 5s
          timeout: 5s
          retries: 5
        volumes:
          - postgresql:/data/postgres
        ports:
          - "${FORWARD_DB_PORT:-5432}:5432"
        networks:
          - laravel
        restart: unless-stopped

    php:
        container_name: "php"
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - USER_ID=${USER_ID:-1000}
                - GROUP_ID=${GROUP_ID:-1000}
        ports:
            - "${FORWARD_PHP_PORT:-9000}:9000"
        volumes:
            - ./src:/var/www/html:delegated
            - ./dockerfiles/configs/custom.ini:/usr/local/etc/php/conf.d/custom.ini
        networks:
            - laravel
        restart: unless-stopped

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        environment:
          PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
          PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
          - pgadmin:/var/lib/pgadmin
        ports:
          - "${FORWARD_PGADMIN_PORT:-8090}:80"
        depends_on:
          postgresql17:
            condition: service_healthy
        networks:
          - laravel
        restart: unless-stopped

    adminer:
      container_name: adminer
      image: adminer
      ports:
        - "${FORWARD_ADMINER_PORT:-8080}:8080"
      environment:
        ADMINER_DEFAULT_DB_DRIVER: pgsql
        ADMINER_DEFAULT_SERVER: postgresql17
        ADMINER_DEFAULT_DB_NAME: ${DB_DATABASE}
      depends_on:
        - postgresql17
      networks:
        - laravel
      restart: unless-stopped

    composer:
        container_name: "composer"
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - USER_ID=${USER_ID:-1000}
                - GROUP_ID=${GROUP_ID:-1000}
        volumes:
            - ./src:/var/www/html
        depends_on:
            - php
        entrypoint: ["composer"]
        networks:
            - laravel

    npm:
        container_name: "npm"
        image: node:current-alpine
        volumes:
            - ./src:/var/www/html
            - /var/www/html/node_modules
        ports:
            - "${FORWARD_NPM_PORT:-5173}:5173"
        working_dir: /var/www/html
        entrypoint: ["/bin/sh", "-c", "${NPM_COMMAND}"]
        networks:
            - laravel

    artisan:
        container_name: "artisan"
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - USER_ID=${USER_ID:-1000}
                - GROUP_ID=${GROUP_ID:-1000}
        volumes:
            - ./src:/var/www/html:delegated
        depends_on:
            - postgresql17
        entrypoint: ["php", "/var/www/html/artisan"]
        networks:
            - laravel

volumes:
  postgresql:
    driver: local
  pgadmin:
    driver: local

networks:
    laravel:
        driver: bridge
